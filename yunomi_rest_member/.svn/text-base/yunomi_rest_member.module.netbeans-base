<?php
/**
 * @file
 *  Provides a generic but powerful API for web services.
 */

/**
 * Implementation of hook_services_resources().
 */
function yunomi_rest_member_services_resources() {
  $resources = array();
  // LOGIN - LOGOUT
  $resources['member'] = array();
  $resources['member']['retrieve'] = array(
    'help' => 'This method retrieves user info for the given uid.',
    'callback' => '_yunomi_rest_member_resource_retrieve',
    'file' => array('type' => 'inc', 'module' => 'yunomi_rest_member', 'name' => 'resources/yunomi_rest_member.resource'),
    'access callback' => '_yunomi_rest_access',
    'access arguments' => array('view'),
    'access arguments append' => TRUE,
    'args' => array(
      array(
        'name' => 'uid',
        'type' => 'int',
        'description' => 'The uid of the user to retrieve.',
        'source' => array('path' => '0'),
        'optional' => FALSE,
      ),
    ),
  );
  $resources['member']['targeted_actions'] = array(
    'update' => array(
      'help' => 'This method does request to change user password.',
      'file' => array('type' => 'inc', 'module' => 'yunomi_rest_member', 'name' => 'resources/yunomi_rest_member.resource'),
      'access callback' => '_yunomi_rest_access',
      'access arguments' => array('view'),
      'access arguments append' => TRUE,
      'callback' => '_yunomi_rest_member_resource_custom_update',
      'args' => array(
        array(
         'name' => 'nid',
         'optional' => FALSE,
         'source' => array('path' => 0),
         'type' => 'string',
         'description' => 'The dummy to get on password change path.',
        ),
        array(
        'name' => 'data',
        'type' => 'array',
        'description' => 'The password change data.',
        'source' => 'data',
        'optional' => FALSE,
        ),
      ),
    ),
    'forgot' => array(
      'help' => 'This method does request for forgot password case.',
      'file' => array('type' => 'inc', 'module' => 'yunomi_rest_member', 'name' => 'resources/yunomi_rest_member.resource'),
      'access callback' => '_yunomi_rest_access',
      'access arguments' => array('view'),
      'access arguments append' => TRUE,
      'callback' => '_yunomi_rest_member_resource_password_forgot',
      'args' => array(
        array(
         'name' => 'nid',
         'optional' => FALSE,
         'source' => array('path' => 0),
         'type' => 'string',
         'description' => 'The dummy to get on password forgot path.',
        ),
        array(
        'name' => 'data',
        'type' => 'array',
        'description' => 'The password forgot data.',
        'source' => 'data',
        'optional' => FALSE,
        ),
      ),
    ),
  );
  $resources['member']['index'] = array(
    'help' => 'This method retrieves array of users.',
    'file' => array('type' => 'inc', 'module' => 'yunomi_rest_member', 'name' => 'resources/yunomi_rest_member.resource'),
    'callback' => '_yunomi_rest_member_resource_index',
    'args' => array(
      array(
       'name' => 'page',
        'optional' => TRUE,
        'type' => 'int',
        'description' => 'The zero-based index of the page to get, defaults to 0.',
        'default value' => 0,
        'source' => array('param' => 'page'),
      ),
      array(
        'name' => 'fields',
        'optional' => TRUE,
        'type' => 'string',
        'description' => 'The fields to get.',
        'default value' => '*',
        'source' => array('param' => 'fields'),
      ),
      array(
        'name' => 'parameters',
        'optional' => TRUE,
        'type' => 'array',
        'description' => 'Parameters',
        'default value' => NULL,
        'source' => array('param' => 'parameters'),
      ),
      array(
        'name' => 'pagesize',
        'optional' => TRUE,
        'type' => 'init',
        'description' => 'Number of records to get per page.',
        'default value' => variable_get('services_user_index_page_size', 20),
        'source' => array('param' => 'pagesize'),
      ),
    ),
    'access arguments' => array('access user profiles'),
    'access arguments append' => FALSE,
  );
  $resources['member']['actions'] = array(
    'login' => array(
      'help' => 'This method perform user login for a new session.',
      'callback' => '_yunomi_rest_member_resource_login',
      'args' => array(
        array(
          'name' => 'username',
          'type' => 'string',
          'description' => 'A valid username or e-mail',
          'source' => array('data' => 'username'),
          'optional' => FALSE,
        ),
        array(
          'name' => 'password',
          'type' => 'string',
          'description' => 'A valid password',
          'source' => array('data' => 'password'),
          'optional' => FALSE,
        ),
      ),
      'access callback' => '_yunomi_rest_access',
      'file' => array('type' => 'inc', 'module' => 'yunomi_rest_member', 'name' => 'resources/yunomi_rest_member.resource'),
    ),
    'logout' => array(
      'file' => array('type' => 'inc', 'module' => 'yunomi_rest_member', 'name' => 'resources/yunomi_rest_member.resource'),
      'help' => 'This method performs user logout.',
      'callback' => '_yunomi_rest_member_resource_logout',
      'access callback' => '_yunomi_rest_access',
    ),
    'register' => array(
      'help' => 'This method performs user register. (anonymous only)',
      'callback' => '_yunomi_rest_member_resource_create',
      'file' => array('type' => 'inc', 'module' => 'yunomi_rest_member', 'name' => 'resources/yunomi_rest_member.resource'),
      'access callback' => '_yunomi_rest_access',
      'access arguments' => array('register'),
      'access arguments append' => TRUE,
      'args' => array(
        array(
          'name' => 'account',
          'type' => 'array',
          'description' => 'The user data',
          'source' => 'data',
          'optional' => FALSE,
        ),
      ),
    ),
  );
  
  return $resources;
}
